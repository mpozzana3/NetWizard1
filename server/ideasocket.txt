    if scelta_scansione == "1":
        result = subprocess.run(['python3', 'scan/scan-1.py'], capture_output=True, text=True)
        client_socket.send(f"Scansione ARP PASSIVA completata.\n{result.stdout}".encode())
    elif scelta_scansione == "2":
        result = subprocess.run(['python3', 'scan/scan-2.py'], capture_output=True, text=True)
        client_socket.send(f"Scansione ARP ATTIVA completata.\n{result.stdout}".encode())
    elif scelta_scansione == "3":
        result = subprocess.run(['sudo', 'nmap', '-sV', '-sC', '-v', '-d', '--script-timeout', '30s', '--script=vuln', '-oA', 'nmap-vuln'], capture_output=True, text=True)
        client_socket.send(f"Scansione NMAP completata.\n{result.stdout}".encode())
    elif scelta_scansione == "4":
        # Esegui tutte le scansioni in sequenza
        result = subprocess.run(['python3', 'scan/scan-1.py'], capture_output=True, text=True)
        client_socket.send(f"Scansione ARP PASSIVA completata.\n{result.stdout}".encode())
        
        result = subprocess.run(['python3', 'scan/scan-2.py'], capture_output=True, text=True)
        client_socket.send(f"Scansione ARP ATTIVA completata.\n{result.stdout}".encode())

        result = subprocess.run(['sudo', 'nmap', '-sV', '-sC', '-v', '-d', '--script-timeout', '30s', '--script=vuln', '-oA', 'nmap-vuln'], capture_output=True, text=True)
        client_socket.send(f"Scansione NMAP completata.\n{result.stdout}".encode())
    else:
        client_socket.send(b"Scelta non valida.\n")
